# .github/workflow/ci.yml
name: ci
on: [push]
jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2

      - name: Run Cypress tests 🧪
        uses: cypress-io/github-action@v2
        with:
         record: true
          parallel: true
          start: npm start
          wait-on: 'http://localhost:8080'
          group: All specs
        env:
          # pass the record key as environment variable
          # during this CI step
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          
      - name: Run Smoke tests 💨
        uses: cypress-io/github-action@v2
        with:
          record: true
          parallel: true
          start: npm start
          wait-on: 'http://localhost:8080'
          group: Smoke specs
          spec: 'cypress/integration/smoke/**/*.js'





          
# name: ci
# Can run on linux, OS X, windows
# on: [push]
# jobs:
#   build-and-test:
#     # Can run on linux, OS X, windows
#     strategy:
#       # do not stop the matrix if one of the jobs fails
#       fail-fast: false
#       matrix:
#         os: [macos-latest, windows-latest, ubuntu-20.04]
#     runs-on: ${{ matrix.os }}
#     steps:
#       - name: Checkout 🛎
#         uses: actions/checkout@v2

#       - name: Cache dependencies 💎
#         uses: actions/cache@v2
#         with:
#           path: |
#             ~/.cache
#             ~/.npm
#           # use key string with "v1" for simple cache invalidation
#           # use precise key to avoid cache "snowballing"
#           # https://glebbahmutov.com/blog/do-not-let-cypress-cache-snowball/
#           key: dependencies-v1-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

#       - name: Install dependencies 📦
#         # Go to package-lock, not package.json
#         run: npm ci
#       - name: Browsers
#         run: npx cypress info
        

#       - name: Build the app 🏗
#         run: npm run build

#       - name: Start the app 📤
#         run: npm start &

#       # wait for url to response before run the test ! (https://github.com/jeffbski/wait-on#readme)
#       - name: Wait for URL ⏰
#         run: npx wait-on http://localhost:8080

#       - name: Run Cypress tests 🧪
#         run: npx cypress run --record --browser chrome
#         env:
#           # pass the record key as environment variable
#           # during this CI step
#           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      # To get screen and videos on github
      #- name: Upload any screenshots and videos 📼
      #  uses: actions/upload-artifact@v2
        # make sure to run this step
        # even if the previous step fails
       # if: always()
        #with:
        #  name: test-artifacts
        #  path: |
         #   cypress/videos
         #   cypress/screenshots